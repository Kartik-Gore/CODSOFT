# -*- coding: utf-8 -*-
"""Sales_Pridiction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F_hipkq_aQkEIZQt8P8dvrXhcHURL9Si

Name- Kartik Nandu Gore

**Task- 4**
# Sales Pridiction Model
"""

# Upload the dataset
from google.colab import files
uploaded = files.upload()

# Step 1: Install and import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 2: Load the dataset
df = pd.read_csv("/content/advertising.csv")  # Change path if needed
print(df.head())

# Step 3: Check for missing values and data info
print(df.info())
print(df.describe())
print(df.isnull().sum())

# Step 4: Visualize relationships
sns.pairplot(df)
plt.show()

sns.heatmap(df.corr(), annot=True, cmap="coolwarm")
plt.show()

# Step 5: Split data into features and target
X = df[['TV', 'Radio', 'Newspaper']]  # Features
y = df['Sales']  # Target

# Step 6: Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 7: Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 8: Predictions
y_pred = model.predict(X_test)

# Step 9: Model evaluation
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("RÂ² Score:", r2_score(y_test, y_pred))

# Step 10: Compare actual vs predicted
comparison_df = pd.DataFrame({'Actual Sales': y_test, 'Predicted Sales': y_pred})
print(comparison_df.head())

# Step 11: Plot Actual vs Predicted
plt.scatter(y_test, y_pred, color='blue')
plt.xlabel("Actual Sales")
plt.ylabel("Predicted Sales")
plt.title("Actual vs Predicted Sales")
plt.show()